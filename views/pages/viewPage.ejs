<!DOCTYPE html>
<html>
<head>
  <%- include ("../partials/header.ejs") %>
</head>

<body>

<div class="container">

    <div class="row d-flex student__block my-4">
        <div class="col">
            <div class="student__info flex-column">
                <h4>
                    <%= student.name %>
                </h4>
                <h5>
                    Класс ученика:
                    <%= student.class_number %>
                </h5>
                <h5>
                    Предметы ученика:
                </h5>
                <div class="subjects_content my-2">
                  <% subjects.forEach(function(subject) { %>
                    <button class="btn btn-secondary m-1"><%= subject.name %></button>
                    <% }); %>
                </div>


            </div>
        </div>
    </div>

    <% if(student.trials.length > 0) { %>
    <div class="row d-flex flex-column group__block mb-1 mt-3 align-items-center">
        <h3 class="my-3 text-primary text-center">Результаты по пробному тестированию ЕНТ</h3>
      <div class="table-responsive-lg">
        <table class="table table-striped table-hover table-bordered border-primary">
          <tr>
            <th>Дата</th>
            <th>Общий балл</th>
            <th>История Каз-на</th>
            <th>Грам-ть чтения</th>
            <th>Мат. грамотность</th>
            <th>Математика</th>
            <th>Физика&emsp;</th>
            <th>География</th>
          </tr>
          <% student.trials.sort(function(a, b) { return new Date(a.trial_date) - new Date(b.trial_date); }).forEach(function(trial) { %>
          <tr>
            <th class="trials_date"><%= trial.trial_date.toLocaleDateString('ru-RU') %></th>
            <th>
              <%= trial.history_kaz_result + trial.reading_literacy_result + trial.math_literacy_result + trial.mathematics_result + trial.physics_result + trial.geography_result + trial.biology_result + trial.chemistry_result%> 

            </th>
            <th class="trials_history_kaz_result">
              <% if(trial.history_kaz_result) { %>
              <%= trial.history_kaz_result %> из 15
              <% } %>
            </th>
            <th class="trials_reading_literacy_result">
              <% if(trial.reading_literacy_result) { %>
                <%= trial.reading_literacy_result %> из 20
                <% } %>
            </th>
            <th class="trials_math_literacy_result">
              <% if(trial.math_literacy_result) { %>
              <%= trial.math_literacy_result %> из 15
              <% } %>
            </th>
            <th class="trials_mathematics_result">
              <% if(trial.mathematics_result) { %>
              <%= trial.mathematics_result %> из 45
              <% } %>
            </th>
            <th class="trials_physics_result">
              <% if(trial.physics_result) { %>
              <%= trial.physics_result %> из 45
              <% } %>
            </th>
            <th class="trials_geography_result">
              <% if(trial.geography_result) { %>
              <%= trial.geography_result %> из 45
              <% } %>
            </th>
          </tr>
          <% }); %>
        </table>
      </div>

              <h5 class="text-center text-primary mt-2">Графики динамики успеваемости по предметам</h5>
              <div class="row d-flex flex-column border rounded">
                <div class="col py-2">
                  <div id="ent_history_kaz_chart">
                  </div>
                </div>
  
                <div class="col py-2">
                  <div id="reading_literacy_chart">
                  </div>
                </div>
  
                <div class="col py-2">
                  <div id="math_literacy_chart">
                  </div>
                </div>
  
                <div class="col py-2">
                  <div id="mathematics_chart">
                  </div>
                </div>
  
                <div class="col py-2">
                  <div id="physics_chart">
                  </div>
                </div>

                <div class="col py-2">
                  <div id="geography_chart">
                  </div>
                </div>

              </div>



      </div>


<script>
const trials_dates = Array.from(document.querySelectorAll('.trials_date')).map((el) => el.innerText);

const mathematics_results = Array.from(document.querySelectorAll('.trials_mathematics_result')).map((el) => el.innerText.split(' ')[0])
const history_kaz_results = Array.from(document.querySelectorAll('.trials_history_kaz_result')).map((el) => el.innerText.split(' ')[0]);
const reading_literacy_results = Array.from(document.querySelectorAll('.trials_reading_literacy_result')).map((el) => el.innerText.split(' ')[0]);
const math_literacy_results = Array.from(document.querySelectorAll('.trials_math_literacy_result')).map((el) => el.innerText.split(' ')[0]);
const physics_results = Array.from(document.querySelectorAll('.trials_physics_result'))
  .map((el) => {
      if(el.innerText.split(' ')[0] == '') {
        return;
      } else {
        return   el.innerText.split(' ')[0];
      }
    });
const geography_results = Array.from(document.querySelectorAll('.trials_geography_result'))
  .map((el, index) => {
    if(el.innerText.split(' ')[0] == '') {

      return;
    } else {

      return   {
        resultValue: el.innerText.split(' ')[0],
        dateValue: trials_dates[index],
      }
    }
  }).filter((el) => el != undefined);


if(history_kaz_results.length > 0) {
  var options = {
    series: [{
      name: "История Казахстана",
      data: history_kaz_results
    }],
    chart: {
    height: 200,
    type: 'line',
    zoom: {
      enabled: false
      },
      toolbar: {
        show: false
      }
    },
    stroke: {
      width: [4, 4]
    },
    markers: {
      size: 4
    },
    dataLabels: {
      enabled: true,
      enabledOnSeries: [1]
    },
    stroke: {
      curve: 'straight'
    },
    title: {
      text: 'История Казахстана',
      align: 'left'
    },
    grid: {
      row: {
        colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns
        opacity: 0.5
      },
    },
    xaxis: {
      categories: trials_dates,
    },
    yaxis: {
      max: 15,
      min: 0,
      tickAmount: 3,
    }
  };
  var chart = new ApexCharts(document.querySelector("#ent_history_kaz_chart"), options);
  chart.render();
};


if(reading_literacy_results.length > 0) {
  var options = {
    series: [{
      name: "Грамотность чтения",
      data: reading_literacy_results
    }],
    chart: {
    height: 200,
    type: 'line',
    zoom: {
      enabled: false
      },
      toolbar: {
        show: false
      }
    },
    stroke: {
      width: [4, 4]
    },
    markers: {
      size: 4
    },
    dataLabels: {
      enabled: true,
      enabledOnSeries: [1]
    },
    stroke: {
      curve: 'straight'
    },
    title: {
      text: 'Грамотность чтения',
      align: 'left'
    },
    grid: {
      row: {
        colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns
        opacity: 0.5
      },
    },
    xaxis: {
      categories: trials_dates,
    },
    yaxis: {
      max: 20,
      min: 0,
      tickAmount: 3,
    }
  };
  var chart = new ApexCharts(document.querySelector("#reading_literacy_chart"), options);
  chart.render();
};


if(math_literacy_results.length > 0) {
  var options = {
    series: [{
      name: "Математическая грамотность",
      data: math_literacy_results
    }],
    chart: {
    height: 200,
    type: 'line',
    zoom: {
      enabled: false
      },
      toolbar: {
        show: false
      }
    },
    stroke: {
      width: [4, 4]
    },
    markers: {
      size: 4
    },
    dataLabels: {
      enabled: true,
      enabledOnSeries: [1]
    },
    stroke: {
      curve: 'straight'
    },
    title: {
      text: 'Математическая грамотность',
      align: 'left'
    },
    grid: {
      row: {
        colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns
        opacity: 0.5
      },
    },
    xaxis: {
      categories: trials_dates,
    },
    yaxis: {
      max: 15,
      min: 0,
      tickAmount: 3,
    }
  };
  var chart = new ApexCharts(document.querySelector("#math_literacy_chart"), options);
  chart.render();
};



if(mathematics_results.length > 0) {
  var options = {
    series: [{
      name: "Математика",
      data: mathematics_results
    }],
    chart: {
    height: 200,
    type: 'line',
    zoom: {
      enabled: false
      },
      toolbar: {
        show: false
      }
    },
    stroke: {
      width: [4, 4]
    },
    markers: {
      size: 4
    },
    dataLabels: {
      enabled: true,
      enabledOnSeries: [1]
    },
    stroke: {
      curve: 'straight'
    },
    title: {
      text: 'Математика',
      align: 'left'
    },
    grid: {
      row: {
        colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns
        opacity: 0.5
      },
    },
    xaxis: {
      categories: trials_dates,
    },
    yaxis: {
      max: 45,
      min: 0,
      tickAmount: 3,
    }
  };
  var chart = new ApexCharts(document.querySelector("#mathematics_chart"), options);
  chart.render();
};


if(physics_results.length > 0) {
  var options = {
    series: [{
      name: "Физика",
      data: physics_results
    }],
    chart: {
    height: 200,
    type: 'line',
    zoom: {
      enabled: false
      },
      toolbar: {
        show: false
      }
    },
    stroke: {
      width: [4, 4]
    },
    markers: {
      size: 4
    },
    dataLabels: {
      enabled: true,
      enabledOnSeries: [1]
    },
    stroke: {
      curve: 'straight'
    },
    title: {
      text: 'Физика',
      align: 'left'
    },
    grid: {
      row: {
        colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns
        opacity: 0.5
      },
    },
    xaxis: {
      categories: trials_dates,
    },
    yaxis: {
      max: 45,
      min: 0,
      tickAmount: 3,
    }
  };
  var chart = new ApexCharts(document.querySelector("#physics_chart"), options);
  chart.render();
};




console.log(geography_results); 
if(geography_results.length > 0) {
  var options = {
    series: [{
      name: "География",
      data: geography_results.map((el) => el.resultValue),
    }],
    chart: {
    height: 200,
    type: 'line',
    zoom: {
      enabled: false
      },
      toolbar: {
        show: false
      }
    },
    stroke: {
      width: [4, 4]
    },
    markers: {
      size: 4
    },
    dataLabels: {
      enabled: true,
      enabledOnSeries: [1]
    },
    stroke: { 
      curve: 'straight'
    },
    title: {  
      text: 'География',
      align: 'left'
    },
    grid: {
      row: {
        colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns
        opacity: 0.5
      },
    },
    xaxis: {
      categories: geography_results.map((el) => el.dateValue),
    },
    yaxis: {
      max: 45,
      min: 0,
      tickAmount: 3,
    }
  };
  var chart = new ApexCharts(document.querySelector("#geography_chart"), options);
  chart.render();
};






</script>
    <% } %>

    <% if(student.nuTrials.length > 0) { %>
      <div class="row d-flex flex-column group__block mb-1 mt-3 align-items-center">
          <h3 class="my-3 text-primary text-center">Результаты по пробному тестам NU</h3>
        <div class="table-responsive-lg">
          <table class="table table-striped table-hover table-bordered border-primary">
            <tr>
              <th>Дата</th>
              <th>Общий балл</th>
              <th>Math</th>
              <th>Critical thinking</th>
            </tr>
            <% student.nuTrials.sort(function(a, b) { return new Date(a.trial_date) - new Date(b.trial_date); }).forEach(function(trial) { %>
            <tr>
              <th class="trials_date"><%= trial.trial_date.toLocaleDateString('ru-RU') %></th>
              <th>
                <%= trial.math_result + trial.critical_thinking_result %> 
  
              </th>
              <th class="trials_math_result">
                <% if(trial.math_result) { %>
                <%= trial.math_result %> из 30
                <% } %>
              </th>
              <th class="trials_critical_thinking_result">
                <% if(trial.critical_thinking_result) { %>
                  <%= trial.critical_thinking_result %> из 30
                  <% } %>
              </th>

            </tr>
            <% }); %>
          </table>
        </div>
  
                <h5 class="text-center text-primary mt-2">Графики динамики успеваемости по предметам</h5>
                <div class="row d-flex flex-column border rounded">
                  <div class="col py-2">
                    <div id="math_chart">
                    </div>
                  </div>
    
                  <div class="col py-2">
                    <div id="critical_thinking_chart">
                    </div>
                  </div>
  
                </div>
  
  
  
        </div>
  
  
  <script>
  const nuTrials_dates = Array.from(document.querySelectorAll('.trials_date')).map((el) => el.innerText);
  
  const math_results = Array.from(document.querySelectorAll('.trials_math_result')).map((el) => el.innerText.split(' ')[0])
  const critical_thinking_results = Array.from(document.querySelectorAll('.trials_critical_thinking_result')).map((el) => el.innerText.split(' ')[0]);

  console.log(math_results)
  
  if(critical_thinking_results.length > 0) {
    var options = {
      series: [{
        name: "Critical thinking",
        data: critical_thinking_results
      }],
      chart: {
      height: 200,
      type: 'line',
      zoom: {
        enabled: false
        },
        toolbar: {
          show: false
        }
      },
      dataLabels: { 
        enabled: true
      },
      stroke: { 
        width: [4, 4]
      },
      markers: {
      size: 3
      },
      title: {
        text: 'Critical thinking',
        align: 'left'
      },
      grid: {
        row: {
          colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns
          opacity: 0.5
        },
      },
      xaxis: {
        categories: nuTrials_dates,
      },
      yaxis: {
        max: 30,
        min: 0,
        tickAmount: 3,
      }
    };
    var chart = new ApexCharts(document.querySelector("#critical_thinking_chart"), options);
    chart.render();
  };
  
  
  if(math_results.length > 0) {
    var options = {
      series: [{
        name: "Math",
        data: math_results,
      }],
      chart: {
      height: 200,
      type: 'line',
      zoom: {
        enabled: false
        },
        toolbar: {
          show: false
        }
      },
      dataLabels: { 
        enabled: true
      },
      stroke: { 
        width: [4, 4]
      },
      markers: {
      size: 3
      },
      title: {  
        text: 'Math',
        align: 'left'
      },
      grid: {
        row: {
          colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns
          opacity: 0.5
        },
      },
      xaxis: {
        categories: nuTrials_dates,
      },
      yaxis: {
        max: 30,
        min: 0,
        tickAmount: 3,
      }
    };
    var chart = new ApexCharts(document.querySelector("#math_chart"), options);
    chart.render();
  };
  
  
  
  
  
  
  </script>
      <% } %>




    <% subjects.forEach(function(subject) { %>

    <% if(student.results.filter((result) => result.subject_id == subject.subject_id).length !== 0) {  %>
      <div class="row d-flex flex-column group__block mb-1 mt-3">
        <h4 class="my-2 text-primary">Результаты тестов по предмету: <%= subject.name %></h4>
      <div class="table-responsive-lg">
        <table class="table table-striped table-hover table-bordered border-primary">
          <tr>
             <th>Дата проведения</th>
             <th>Предмет</th>
             <th>Формат тестирования</th>
             <th>Максимум баллов</th>
             <th>Набранные баллы</th>
             <th>% от максимума</th>
          </tr>
          <% student.results.filter((result) => result.subject_id == subject.subject_id).sort(function(a, b) { return new Date(a.date) - new Date(b.date); }).forEach(function(result) { %>
          <tr>
            <th class="date_<%= subject.id %>"><%= result.date.toLocaleDateString('ru-RU') %></th>
            <th><%= subject.name %></th>
            <th><%= result.format %></th>
            <th><%= result.max_points %></th>
            <th><%= result.points %></th>
            <th class="percent_<%= subject.id %>"><%= Math.round((result.points / result.max_points) * 100) %></th>
          </tr>
          <% }); %>
        </table>
      </div>
      <div class="col py-2">
        <div id="chart_<%= subject.id %>">
        </div>
      </div>
      </div>
  <script> 

    

var options = {
              series: [{
              name: '% от максимума',
              type: 'line',
              data: Array.from(document.querySelectorAll('.percent_<%= subject.id %>')).map((el) => el.innerHTML),
            }],
              chart: {
              height: 350,
              type: 'line',
            },
            zoom: {
  enabled: false
  },
            stroke: {
              width: [4, 4]
            },
            markers: {
              size: 3
            },
            title: {
              text: 'График по предмету <%= subject.name %>'
            },
            dataLabels: {
              enabled: true,
              enabledOnSeries: [1]
            },
            labels: Array.from(document.querySelectorAll('.date_<%= subject.id %>')).map((el) => el.innerHTML),
            xaxis: {
              type: 'date'
            },
            yaxis: [{
              title: {
                text: '% от максимума',
              },
              max: 100,
              min: 0,
            }]
            };


            var chart_<%= subject.id %> = new ApexCharts(document.querySelector("#chart_<%= subject.id %>"), options).render();
    </script>

        <% } %>

        <% if(records.filter((record) => record.name == subject.name).length !== 0) { %>
          <div class="row d-flex flex-column group__block my-1">
          <div class="accordion" id="accordion">
            <div class="accordion-item">
              <h2 class="accordion-header" id="headingSubject_<%= subject.id %>">
                <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseSubject_<%= subject.id %>" aria-expanded="true" aria-controls="collapseSubject_<%= subject.id %>">
                  <h5 class="text-center text-primary">Ревью занятий по предмету: <%= subject.name %></h5>
                </button>
              </h2>
              <div id="collapseSubject_<%= subject.id %>" class="accordion-collapse collapse" aria-labelledby="headingSubject_<%= subject.id %>" data-bs-parent="#accordion">
                <div class="accordion-body d-flex flex-column bg-warning">
    
                    <div class="table-responsive-lg">
                      <table class="table table-striped table-hover table-bordered border-primary">
                        <tr>
                           <th>Дата проведения</th>
                           <th>Предмет</th>
                           <th>Посещаемость</th>
                           <th>Активность</th>
                           <th>Домашнее задание</th>
                        </tr>
  <% records.filter((record) => record.name == subject.name).forEach(function(record) { %>
                        <tr>
                            <th class=""><%= record.posting_date.toLocaleDateString('ru-RU') %></th>
                            <th><%= record.name %></th>
                            <th><% if(record.attendance) { %>
                              <p class="attendance_<%= subject.id %>">Посетил</p>
                              <% } else { %>
                              <p class="attendance_<%= subject.id %>">Отсутствовал</p>
            
                            <% } %>
                              </th>
                              <th><% if(record.activity) { %>
                                <p class="activity_<%= subject.id %>">Активен</p>
                                <% } else { %>
                                  <p class="activity_<%= subject.id %>">Не активен</p>
                              <% } %>
                                </th>
                              <th><% if(record.homework) { %>
                                  <p class="homework_<%= subject.id %>">Выполнил</p>
                                  <% } else { %>
                                    <p class="homework_<%= subject.id %>">Не выполнил</p>
                                <% } %>
                              </th>
                        </tr>
  <% }); %>
                     </table>
                    </div>
                  </div>
              </div>
            </div>
          </div>
          <div class="col py-2">
            <div id="chart_records_<%= subject.id %>">
            </div>
          </div>
  
  
  
  
        </div>
  
  
  
        <script>
  
  const attendance_<%= subject.id %> = Array.from(document.querySelectorAll('.attendance_<%= subject.id %>'))
  .map((el) => el.innerHTML)
  const attended_<%= subject.id %> = Array.from(document.querySelectorAll('.attendance_<%= subject.id %>'))
  .map((el) => el.innerHTML).filter((el) => el == 'Посетил');
  
  const activity_<%= subject.id %> = Array.from(document.querySelectorAll('.activity_<%= subject.id %>'))
  .map((el) => el.innerHTML)
  const active_<%= subject.id %> = Array.from(document.querySelectorAll('.activity_<%= subject.id %>'))
  .map((el) => el.innerHTML).filter((el) => el == 'Активен');
  
  const homework_<%= subject.id %> = Array.from(document.querySelectorAll('.homework_<%= subject.id %>'))
  .map((el) => el.innerHTML)
  const doneHomework_<%= subject.id %> = Array.from(document.querySelectorAll('.homework_<%= subject.id %>'))
  .map((el) => el.innerHTML).filter((el) => el == 'Выполнил');
  
  console.log(attendance_<%= subject.id %>)


  var options = {
    series: [{
      name: 'Да',
      data: [attended_<%= subject.id %>.length, active_<%= subject.id %>.length, doneHomework_<%= subject.id %>.length]
    }, {
      name: 'Нет',
      data: [attendance_<%= subject.id %>.length - attended_<%= subject.id %>.length, attended_<%= subject.id %>.length - active_<%= subject.id %>.length, attended_<%= subject.id %>.length - doneHomework_<%= subject.id %>.length]
    }],
    chart: {
      type: 'bar',
      height: 300,
      stacked: true,
      toolbar: {
        show: false
      },
      zoom: {
        enabled: false
      }
    },
    responsive: [{
      breakpoint: 480,
      options: {
        legend: {
          position: 'bottom',
          offsetX: -10,
          offsetY: 0
        }
      }
    }],
    plotOptions: {
      bar: {
        horizontal: false,
        borderRadius: 10
      },
    },
    xaxis: {
      type: 'category',
      categories: ['Посещаемость', 'Активность', 'Домашнее задание'
      ],
    },
    legend: {
      position: 'right',
      offsetY: 40
    },
    fill: {
      opacity: 1
    }
  };
  
          var chart = new ApexCharts(document.querySelector("#chart_records_<%= subject.id %>"), options);
          chart.render();
          
          
  
  
  
  
  
  
  
  
  
          </script>
  <% } %>


<% }); %>


</div>




<%- include ("../partials/footer.ejs") %>